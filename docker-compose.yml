version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./setup_pg_scripts.sql:/docker-entrypoint-initdb.d/setup_pg_scripts.sql
    restart: unless-stopped

  api-service:
    build:
      context: . # 프로젝트 루트를 빌드 컨텍스트로 설정하여 _common에 접근
      dockerfile: api-service/Dockerfile # 사용할 Dockerfile 경로
    container_name: api_service_container
    ports:
      - "8000:8000"
    env_file:
      - .env # .env 파일에서 환경 변수 로드
    depends_on:
      - postgres # postgres 서비스가 시작된 후에 실행
    restart: unless-stopped

  web-jobposting-service:
    build:
      context: . # 프로젝트 루트를 빌드 컨텍스트로 설정하여 _common에 접근
      dockerfile: web-jobposting-service/Dockerfile # 사용할 Dockerfile 경로
    container_name: web_jobposting_service_container
    ports:
      - "8001:8001"
    env_file:
      - .env # .env 파일에서 환경 변수 로드
    restart: unless-stopped

  web-dashboard-service:
    build:
      context: . # 프로젝트 루트를 빌드 컨텍스트로 설정하여 _common에 접근
      dockerfile: web-dashboard-service/Dockerfile
    container_name: web_dashboard_service_container
    ports:
      - "8501:8501"
    env_file:
      - .env
    restart: unless-stopped
    
volumes:
  postgres-data:
